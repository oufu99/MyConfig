我叫欧佳林,今年27岁,湖南永州人,平时喜欢看书打代码,优化自己的生活,对学习有着极高的热情,性格热情开朗
工作方面的话,到现在为止做程序员已经4年了,从最开始用webform到mvc再到.netcore几乎都使用或者维护过 主要做的还是后台方面,winform只是自己写着一些程序用没有编写过实际代码

最近这家是正品科技,在棠东那边,
正品是一家主营二维码标签,微信商城的公司,客户来自各行各业并且有很多个产商,各个厂商之间需要数据隔离,所以就采用了分表的方式来处理这个问题,网站架构中规中矩,MVC三层架构+EF,因为这系统做的不是标准的产品,所以会有很多定制的功能,也正是因为这个需求,所以我们封装了一层请求层,介于请求开始,真正的方法没有执行前,拿到他的请求地址,通过二级域名来确定是哪一家,然后查询这个页面是否被定制,如果被定制就跳转到定制的页面,其他的注册,商城的代码都是一些比较普通的,只是在流程上进行优化,比如用虚方法去写一些通用的流程,然后通过配置去判断创建什么实例给到父类就可以了,我前段后端的功能都做过,不过觉得得意的还是一些对于通用代码的封装,他使得我们便于后面开发新功能,可以直接写具体的业务而不是纠结于获取数据提交数据之类
比如活动的设置
	活动设置需要的都是一些通用的数据,id拉,开始时间拉,这些都是通用的东西,按道理是不需要程序员每次都去获取的, 母版页做好上一步下一步的按钮,然后给出一个js让后面的页面去实现,统一做保存,还有上一步下一步的动作,也是母版页统一完成的,后台的程序也是写一个父类的控制器,先请求同一个方法Save,然后调用一个虚方法,这个虚方法让子类去实现(问题点1),这样后面开发的时候要新添加页面和功能就直接继承这个控制器,然后只需要实现后台方法和js方法,他们就不用再去写怎么获取那些通用数据的方法,父类的方法会帮他们绑定好,他们直接使用对象和js对象就可以了,极大的减少了重复劳动


后面正品3.0的路子越做越窄了以后,老板就想做一个标准版的系统,走Saas路线,然后就说用.netcore来做,毕竟是新技术,后面肯定这个才是趋势,重新设计了项目结构,便于二次开发和维护
热更新:
   解决core的不能删除dll问题,就是不强引用,然后自己维护一个容器,在系统需要具体的类的时候,我们用反射创建一个实例给他们
遇到的问题:前面出了个一版以后,后面在调用的时候爆,不能将对象载入到IService中,原因就是又反射了一个新的类型出来,所以他们创建出来的实例不一样,解决方法就是我们把那具体的反射存到了AppDomain里面去,反射的时候先看看对象是不是存在,如果存在就直接取出来,然后这样就不会爆这个错了

这个后面再说
毕业以后做了一段时间的咖啡师,因为大学学的就是这个方面的,后面发现并不是我真正热爱的,所以后面转到了程序员这边,因为自己家里面就是程序员,我爸也算是老一辈程序员了(笑一下),所以从小也会教一些这个,后面就再去培训了一下,系统的学习了一下编程,然后就一直做这行

说出一些亮点,给一些让他反提问的地方,这里我用红色表示,然后写好答案,把握节奏,面试不是目的,拿到自己想要的工资才是目的

问公司技术,有没有前段,上下班时间,加班补助,观察一下公司氛围